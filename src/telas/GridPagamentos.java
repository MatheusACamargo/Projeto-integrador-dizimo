/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import database.DBMException;
import database.DBMLocalizador;
import database.DBPagamento;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 0132945
 */
public class GridPagamentos extends javax.swing.JDialog {
    private DefaultTableModel dtm;
    private DBMLocalizador<DBPagamento> lPagamento;
    private ArrayList<DBPagamento> listPagamentos;
    private DateFormat editaData;
    private DateFormat editaDataDigitada;
    private DateFormat editaPeriodo;
    private DateFormat editaPeriodoDigitado;
    private DateFormat editaAno;
    /**
     * Creates new form GridPagamentos
     */
    public GridPagamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dtm = (DefaultTableModel) tPagamentos.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfFiltro = new javax.swing.JTextField();
        lbFiltro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPagamentos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tabela de pagamentos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tfFiltro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfFiltroFocusLost(evt);
            }
        });

        lbFiltro.setText("Filtro");

        tPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ficha", "Nome", "Data pagamento", "Valor", "Conferido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tPagamentos);
        if (tPagamentos.getColumnModel().getColumnCount() > 0) {
            tPagamentos.getColumnModel().getColumn(0).setPreferredWidth(20);
            tPagamentos.getColumnModel().getColumn(4).setResizable(false);
            tPagamentos.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfFiltroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfFiltroFocusLost
        try {
            limpaGrid();
            if(!tfFiltro.getText().isEmpty()){
                Date dataDigitada = null;
                String buscaData = "";
                String buscaPeriodo = "";
                String buscaAno = "";
                String buscaNome = "%" + tfFiltro.getText() + "%";
                try {
                    dataDigitada = editaData.parse(tfFiltro.getText());
                    buscaData = editaDataDigitada.format(dataDigitada);
                } catch (ParseException ex) {
                    try {
                        //se parse da data não funcionou então tenta identificar como um período
                        dataDigitada = editaPeriodo.parse(tfFiltro.getText());
                        buscaPeriodo = editaPeriodoDigitado.format(dataDigitada) + "%";
                    } catch (ParseException ex1) {
                        try {
                            //se parse de período não funcionou então tenta identificar como um ano
                            editaAno.parse(tfFiltro.getText());
                            buscaAno = "%" + tfFiltro.getText() + "%";
                        } catch (ParseException ex2) {
                            //Se nenhum parse funcionou não se trata de uma data
                        }
                    }
                }
                
                listPagamentos = lPagamento.procuraRegistros("strDataReferencia LIKE ? OR codigoFicha = ? OR "
                        + "strDataReferencia LIKE ? OR strDataReferencia LIKE ? OR "
                        + "codigoFicha IN (SELECT codigo FROM Ficha WHERE codigo = codigoFicha AND "
                        + "intResponsavel IN (SELECT codigo FROM pessoa WHERE codigo = intResponsavel AND nome LIKE ?)) "
                        + "ORDER BY strDataReferencia", 
                        buscaData, tfFiltro.getText(), buscaPeriodo, buscaAno, buscaNome);
            }else{
                //Precisa do 1=1 para funcionar como um WHERE
                listPagamentos = lPagamento.procuraRegistros("1=1 ORDER BY strDataReferencia");
            }
            carregaGrid();
        } catch (DBMException ex) {
        }        
    }//GEN-LAST:event_tfFiltroFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        editaData = new SimpleDateFormat("dd/MM/yyyy");
        editaPeriodo = new SimpleDateFormat("MM/yyyy");
        editaAno = new SimpleDateFormat("yyyy");
        editaDataDigitada = new SimpleDateFormat("yyyy-MM-dd");
        editaPeriodoDigitado = new SimpleDateFormat("yyyy-MM");
        try {
            //para demais funções busca o registro no banco
            lPagamento = new DBMLocalizador<>(DBPagamento.class);
            listPagamentos = lPagamento.procuraRegistros("1=1 ORDER BY strDataReferencia");
            carregaGrid();
        } catch (DBMException e) {
        }
    }//GEN-LAST:event_formWindowOpened

    
    //Limpa a tabela caso existam registros
    private void limpaGrid(){
        if (dtm.getRowCount() > 0) {
            for (int i = dtm.getRowCount() - 1; i > -1; i--) {
                dtm.removeRow(i);
            }
        }
    }    

    private void carregaGrid(){
        if(listPagamentos != null){
            for(DBPagamento pag : listPagamentos){
                dtm.insertRow(tPagamentos.getRowCount(), toRow(pag));
            }
        }
    }

    private Object[] toRow(DBPagamento pag){
        Object[] dados = new Object[tPagamentos.getColumnCount()];
        dados[0] = pag.getCodigoFicha();
        dados[1] = pag.getFicha().getResponsavel().getNome();
        dados[2] = editaData.format(pag.getDataReferencia());
        dados[3] = pag.getValor();
        dados[4] = false;
        return dados;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GridPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GridPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GridPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GridPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GridPagamentos dialog = new GridPagamentos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbFiltro;
    private javax.swing.JTable tPagamentos;
    private javax.swing.JTextField tfFiltro;
    // End of variables declaration//GEN-END:variables
}
